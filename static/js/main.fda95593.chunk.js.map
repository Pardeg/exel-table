{"version":3,"sources":["data/workData.js","services/tableHelper.js","components/table-row/table-row.js","components/table-col/table-col.js","features/app/App.js","index.js"],"names":["tableDataJson","JSON","stringify","dates","works","tableHelper","filterDataToggle","data","id","value","toggle","filter","el","calcCeilValue","index","idx","newData","colSumToggle","colId","split","reduce","acc","filteredDataSum","console","log","TableRow","props","rowOptions","colOptions","onChange","ceilsdata","onClick","colRender","map","key","type","TableCol","className","initialState","colSum","colName","rowName","rowSum","ceilsData","parse","App","inputHandleChange","e","target","state","length","setState","colCounterOnClick","name","ceilname","newRowSum","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fda95593.chunk.js","sourcesContent":["//тестовые данные\r\nconst tableData = {\r\n    dates:['28.09.2020','29.09.2020','30.09.2020','1.10.2020'],\r\n    works: ['Ремонт компьютера','ремонт холодильника','ремонт трубы','ремонт телевизора']\r\n}\r\n\r\nconst tableDataJson = JSON.stringify(tableData);\r\n\r\nexport default tableDataJson;","class TableHelper {\r\n\r\n    // фильтруем данные из таблицы\r\n    filterDataToggle=(data,id,value,toggle)=>{\r\n        if(toggle==='on') return data.filter(el=>el.id===id)\r\n        return data.filter(el=>el.id!==id)\r\n}\r\n\r\n// Считаем значение в каждой клетке\r\n    calcCeilValue = (index,idx, data)=>{\r\n        const newData=data.filter(el=>el.id===`${index}-${idx}`)\r\n        if(!newData[0]) return 0\r\n        return newData[0].value\r\n    }\r\n    // Считаем сумму ряда или колонки\r\n    colSumToggle = (data,id,toggle)=>{\r\n        if(toggle==='col'){\r\n            const colId = id.split('-')[0]\r\n            const filteredDataSum = data.filter(el => el.id.split('-')[0] === colId)\r\n                .reduce((acc, el) => {\r\n                    return acc += +el.value\r\n                }, 0)\r\n            return filteredDataSum;\r\n        }else{\r\n\r\n            const filteredDataSum = data.filter(el => el.id.split('-')[1] === id)\r\n                .reduce((acc, el) => {\r\n                    return acc += +el.value\r\n                }, 0)\r\n            console.log(filteredDataSum,id)\r\n            return filteredDataSum;\r\n        }\r\n}\r\n}\r\n\r\nconst tableHelper = new TableHelper();\r\nexport default tableHelper;","import React from \"react\";\r\nimport tableHelper from \"../../services/tableHelper\";\r\nconst TableRow = (props)=>{\r\n    const{rowOptions, colOptions,\r\n        onChange,ceilsdata,onClick}=props;\r\n    const rowRender = ()=>{\r\n        return rowOptions.map((el,idx)=>{\r\n            return( <tr key={el}>\r\n                <td>\r\n                    <button onClick={()=>onClick(`${idx}`,el,'row')}>\r\n                    {el}\r\n                    </button>\r\n                </td>\r\n                {colRender(idx)}\r\n            </tr>)\r\n        })\r\n    }\r\n\r\n\r\nconst colRender = (idx)=>{\r\n       return colOptions.map((el,index)=>{\r\n          return(<td   key={el}>\r\n              <input type='number'\r\n                     value={tableHelper.calcCeilValue(index,idx,ceilsdata)}\r\n           id={`${index}-${idx}`}\r\n                     onChange={onChange}\r\n           />\r\n          </td>)\r\n       })\r\n}\r\n    return rowRender()\r\n}\r\nexport default TableRow;","import React from \"react\";\r\nimport './table-ceil.css'\r\n\r\nconst TableCol = (props) => {\r\n    const {colOptions,onClick} = props;\r\n\r\n    const renderCols = () => {\r\n        return (<tr>\r\n                <td className='tableRow'></td>\r\n            {colOptions.map((el,idx) => {\r\n                return (\r\n                    <td className='tableRow'\r\n                        key={el}>\r\n                       <button\r\n                       onClick={()=>onClick(`${idx}`,el,'col')}>\r\n                           {el}\r\n                       </button>\r\n                    </td>\r\n                )\r\n            })}\r\n            </tr>\r\n        )\r\n    }\r\n\r\n\r\n    return renderCols()\r\n\r\n}\r\n\r\nexport default TableCol;","import React from 'react';\nimport tableDataJson from \"../../data/workData\";\nimport TableRow from \"../../components/table-row/table-row\";\nimport TableCol from \"../../components/table-col/table-col\";\nimport tableHelper from \"../../services/tableHelper\";\nimport './App.css';\n\nconst initialState = {\n    colSum: 0,\n    colName: '',\n    rowName: '',\n    rowSum: 0,\n    ceilsData: [{id: '', value: 0}],\n    ...JSON.parse(tableDataJson)\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = initialState\n    }\n\n    inputHandleChange = (e) => {\n        const {id, value} = e.target;\n        const {ceilsData} = this.state;\n        if (tableHelper.filterDataToggle(ceilsData, id, value, 'on').length === 0) return (\n            this.setState(() => ({ceilsData: [...ceilsData, {id, value}]}))\n        )\n\n        return this.setState(() => ({\n            ceilsData: [...tableHelper.filterDataToggle(ceilsData, id, value),\n                {id, value}]\n        }))\n    }\n    colCounterOnClick = (id,name,ceilname) => {\n        const { ceilsData} = this.state;\n        if (ceilname === 'col') {\n            return this.setState(() => ({\n                colSum: tableHelper.colSumToggle(ceilsData, id, 'col'),\n                colName: name\n            }))\n        }else {\n            const newRowSum = tableHelper.colSumToggle(ceilsData, id, 'row')\n            console.log(newRowSum)\n            return this.setState(() => ({\n                rowSum: newRowSum,\n                rowName: name\n            }))\n        }\n    }\n\n    render() {\n        const {dates, works, ceilsData,colName,\n        colSum,rowName,rowSum} = this.state;\n        return <div className='container'>\n            <div className='tableWrapper'>\n            <table>\n                <tbody>\n                <TableCol\n                    colOptions={dates}\n                    onClick={this.colCounterOnClick}\n                />\n                <TableRow rowOptions={works}\n                          colOptions={dates}\n                          onChange={this.inputHandleChange}\n                          ceilsdata={ceilsData}\n                          onClick={this.colCounterOnClick}\n                />\n                </tbody>\n            </table>\n                <span className='rowSumContainer'>{\n                    rowSum>0?`сумма ${rowName} : ${rowSum}`\n                        :`Сумма по выбранной работе`\n                }</span>\n\n            </div>\n            <span className='colSumContainer'>\n                  {colSum>0?`сумма за ${colName}:${colSum}`:\n                      `Сумма за выбранное число`}\n                </span>\n        </div>\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './features/app/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}